/**
  \color #0af
  \symbol CJ
*/

element JumperCell : Bond{
	typedef Unsigned(6) Coord; 
	typedef Unsigned(6) SiteNum;
	typedef Unsigned(8) Byte;
	typedef Int(16)     Short;
	typedef Int(32)     Long;
	typedef Unsigned(3) Index;

	Random rm;


	SiteNum moveType = 0;
	Once once;
	//0 - random, 1 - NE, 2 - NW, 3 - SE, 4 - SW
	//purple      yellow    red        blue       green

  ARGB getColor(Unsigned selector) {
    ColorUtils cu;
    ARGB ret = cu.color(0x00000000U);
    if (moveType == 5 || moveType == 6) ret[1] = (Byte)(bondCount*63);
    if (moveType == 8) ret[1] = (Byte)(bondCount*31);
    if (moveType == 5 || moveType == 7) ret[2] = (Byte)(bondCount*31);
    if (moveType == 8) ret[2] = (Byte)(bondCount*63);

    if (moveType == 7) ret[3] = (Byte)(bondCount*63);
    if (moveType == 6) ret[2] = (Byte)(bondCount*31);
    return ret;
	}

	Void behave(){
		if (once.new()){
			moveType = (SiteNum)rm.between(5, 8);
		}
		if (active){
			checkBonds();
			findBonds();
			moveTo(moveType);
		}
		drawBonds();
	}
}