ulam 1;
/**
  A small element to simulate the rock paper scissors
  cellular automota
  \author ben_matthews
*/

element RPS{
  typedef Unsigned(8) Byte;
  typedef Unsigned(6) SiteNum;

  EventWindow ew;
  Random rm;
  Once once;

  Byte life = 10;
  Bool preInit = false;
  Byte type = 0;

  ARGB getColor(Unsigned selector){
    ColorUtils cu;
    ARGB ret=cu.color(0xff00ff00u);
    ret[1]=0;
    ret[2]=0;
    ret[3]=0;
    if(type==0) ret[1]=255;
    if(type==1) ret[2]=255;
    if(type==2) ret[3]=255;
    return ret;
  }

  Void behave(){
    if (once.new() && !preInit){
      type = (Byte)rm.between(0, 2);
    }
    else {
      for (SiteNum i = 1; i < 5; i++){
        if (ew[i] is Empty) ew[i] = clone();
        Atom a = (Atom)ew[i];
        if (a as RPS){
          if (a.type == (type+1)%3) a.life--;
          if (a.life == 0)ew[i] = clone();
          else ew[i] = a;
        }
      }
    }
  }

  RPS clone(){
    RPS rps = RPS.instanceof;
    rps.preInit = true;
    rps.type = type;
    return rps;
  }
  
}
